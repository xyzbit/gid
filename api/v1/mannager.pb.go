// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: mannager.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IDKind int32

const (
	// 递增id, 从起始id开始, 每次递增1
	IDKind_IncrementID IDKind = 0
	// 雪花算法id, 适合在ID数据敏感的场景使用
	IDKind_SnowflakeID IDKind = 1
)

// Enum value maps for IDKind.
var (
	IDKind_name = map[int32]string{
		0: "IncrementID",
		1: "SnowflakeID",
	}
	IDKind_value = map[string]int32{
		"IncrementID": 0,
		"SnowflakeID": 1,
	}
)

func (x IDKind) Enum() *IDKind {
	p := new(IDKind)
	*p = x
	return p
}

func (x IDKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IDKind) Descriptor() protoreflect.EnumDescriptor {
	return file_mannager_proto_enumTypes[0].Descriptor()
}

func (IDKind) Type() protoreflect.EnumType {
	return &file_mannager_proto_enumTypes[0]
}

func (x IDKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IDKind.Descriptor instead.
func (IDKind) EnumDescriptor() ([]byte, []int) {
	return file_mannager_proto_rawDescGZIP(), []int{0}
}

type MoudlesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 模块名, 为空时返回所有模块
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *MoudlesReq) Reset() {
	*x = MoudlesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mannager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoudlesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoudlesReq) ProtoMessage() {}

func (x *MoudlesReq) ProtoReflect() protoreflect.Message {
	mi := &file_mannager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoudlesReq.ProtoReflect.Descriptor instead.
func (*MoudlesReq) Descriptor() ([]byte, []int) {
	return file_mannager_proto_rawDescGZIP(), []int{0}
}

func (x *MoudlesReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MoudlesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Moudles []*Moudle `protobuf:"bytes,1,rep,name=moudles,proto3" json:"moudles,omitempty"`
}

func (x *MoudlesReply) Reset() {
	*x = MoudlesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mannager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoudlesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoudlesReply) ProtoMessage() {}

func (x *MoudlesReply) ProtoReflect() protoreflect.Message {
	mi := &file_mannager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoudlesReply.ProtoReflect.Descriptor instead.
func (*MoudlesReply) Descriptor() ([]byte, []int) {
	return file_mannager_proto_rawDescGZIP(), []int{1}
}

func (x *MoudlesReply) GetMoudles() []*Moudle {
	if x != nil {
		return x.Moudles
	}
	return nil
}

type Moudle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 模块名
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 模块描述
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	// 模块id类型
	IdKind  IDKind `protobuf:"varint,3,opt,name=id_kind,json=idKind,proto3,enum=gid.api.v1.IDKind" json:"id_kind,omitempty"`
	FirstId int64  `protobuf:"varint,4,opt,name=first_id,json=firstId,proto3" json:"first_id,omitempty"`
	// 每批生成数量
	LoadNum int32 `protobuf:"varint,5,opt,name=load_num,json=loadNum,proto3" json:"load_num,omitempty"`
	// 加载阀值
	LoadThreshold int32 `protobuf:"varint,6,opt,name=load_threshold,json=loadThreshold,proto3" json:"load_threshold,omitempty"`
	// 模块跳过的id范围
	SkipRange []*SkipRange `protobuf:"bytes,7,rep,name=skip_range,json=skipRange,proto3" json:"skip_range,omitempty"`
	StartTime int64        `protobuf:"varint,8,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // 开始时间
	// 模块最后生成id
	LastId int64 `protobuf:"varint,10,opt,name=last_id,json=lastId,proto3" json:"last_id,omitempty"`
	// 模块创建时间
	CreateTime int64 `protobuf:"varint,11,opt,name=createTime,proto3" json:"createTime,omitempty"`
	// 模块更新时间
	UpdateTime int64 `protobuf:"varint,12,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *Moudle) Reset() {
	*x = Moudle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mannager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Moudle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Moudle) ProtoMessage() {}

func (x *Moudle) ProtoReflect() protoreflect.Message {
	mi := &file_mannager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Moudle.ProtoReflect.Descriptor instead.
func (*Moudle) Descriptor() ([]byte, []int) {
	return file_mannager_proto_rawDescGZIP(), []int{2}
}

func (x *Moudle) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Moudle) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Moudle) GetIdKind() IDKind {
	if x != nil {
		return x.IdKind
	}
	return IDKind_IncrementID
}

func (x *Moudle) GetFirstId() int64 {
	if x != nil {
		return x.FirstId
	}
	return 0
}

func (x *Moudle) GetLoadNum() int32 {
	if x != nil {
		return x.LoadNum
	}
	return 0
}

func (x *Moudle) GetLoadThreshold() int32 {
	if x != nil {
		return x.LoadThreshold
	}
	return 0
}

func (x *Moudle) GetSkipRange() []*SkipRange {
	if x != nil {
		return x.SkipRange
	}
	return nil
}

func (x *Moudle) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Moudle) GetLastId() int64 {
	if x != nil {
		return x.LastId
	}
	return 0
}

func (x *Moudle) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Moudle) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type RegisterModulesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 模块名
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 模块描述
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	// 模块id类型
	IdKind IDKind `protobuf:"varint,3,opt,name=id_kind,json=idKind,proto3,enum=gid.api.v1.IDKind" json:"id_kind,omitempty"`
	// 模块id生成选项
	//
	// Types that are assignable to IdOption:
	//	*RegisterModulesReq_IncrementOption
	//	*RegisterModulesReq_SnowflakeOption
	IdOption isRegisterModulesReq_IdOption `protobuf_oneof:"id_option"`
}

func (x *RegisterModulesReq) Reset() {
	*x = RegisterModulesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mannager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterModulesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterModulesReq) ProtoMessage() {}

func (x *RegisterModulesReq) ProtoReflect() protoreflect.Message {
	mi := &file_mannager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterModulesReq.ProtoReflect.Descriptor instead.
func (*RegisterModulesReq) Descriptor() ([]byte, []int) {
	return file_mannager_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterModulesReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterModulesReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *RegisterModulesReq) GetIdKind() IDKind {
	if x != nil {
		return x.IdKind
	}
	return IDKind_IncrementID
}

func (m *RegisterModulesReq) GetIdOption() isRegisterModulesReq_IdOption {
	if m != nil {
		return m.IdOption
	}
	return nil
}

func (x *RegisterModulesReq) GetIncrementOption() *IncrementOption {
	if x, ok := x.GetIdOption().(*RegisterModulesReq_IncrementOption); ok {
		return x.IncrementOption
	}
	return nil
}

func (x *RegisterModulesReq) GetSnowflakeOption() *SnowflakeOption {
	if x, ok := x.GetIdOption().(*RegisterModulesReq_SnowflakeOption); ok {
		return x.SnowflakeOption
	}
	return nil
}

type isRegisterModulesReq_IdOption interface {
	isRegisterModulesReq_IdOption()
}

type RegisterModulesReq_IncrementOption struct {
	IncrementOption *IncrementOption `protobuf:"bytes,4,opt,name=increment_option,json=incrementOption,proto3,oneof"`
}

type RegisterModulesReq_SnowflakeOption struct {
	SnowflakeOption *SnowflakeOption `protobuf:"bytes,5,opt,name=snowflake_option,json=snowflakeOption,proto3,oneof"`
}

func (*RegisterModulesReq_IncrementOption) isRegisterModulesReq_IdOption() {}

func (*RegisterModulesReq_SnowflakeOption) isRegisterModulesReq_IdOption() {}

type RegisterModulesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RegisterModulesReply) Reset() {
	*x = RegisterModulesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mannager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterModulesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterModulesReply) ProtoMessage() {}

func (x *RegisterModulesReply) ProtoReflect() protoreflect.Message {
	mi := &file_mannager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterModulesReply.ProtoReflect.Descriptor instead.
func (*RegisterModulesReply) Descriptor() ([]byte, []int) {
	return file_mannager_proto_rawDescGZIP(), []int{4}
}

type IncrementOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstId       int64 `protobuf:"varint,1,opt,name=first_id,json=firstId,proto3" json:"first_id,omitempty"`
	LoadNum       int32 `protobuf:"varint,2,opt,name=load_num,json=loadNum,proto3" json:"load_num,omitempty"`                   // 每批生成数量
	LoadThreshold int32 `protobuf:"varint,3,opt,name=load_threshold,json=loadThreshold,proto3" json:"load_threshold,omitempty"` // 加载阀值
	// 模块跳过的id范围
	SkipRange []*SkipRange `protobuf:"bytes,4,rep,name=skip_range,json=skipRange,proto3" json:"skip_range,omitempty"`
}

func (x *IncrementOption) Reset() {
	*x = IncrementOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mannager_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncrementOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncrementOption) ProtoMessage() {}

func (x *IncrementOption) ProtoReflect() protoreflect.Message {
	mi := &file_mannager_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncrementOption.ProtoReflect.Descriptor instead.
func (*IncrementOption) Descriptor() ([]byte, []int) {
	return file_mannager_proto_rawDescGZIP(), []int{5}
}

func (x *IncrementOption) GetFirstId() int64 {
	if x != nil {
		return x.FirstId
	}
	return 0
}

func (x *IncrementOption) GetLoadNum() int32 {
	if x != nil {
		return x.LoadNum
	}
	return 0
}

func (x *IncrementOption) GetLoadThreshold() int32 {
	if x != nil {
		return x.LoadThreshold
	}
	return 0
}

func (x *IncrementOption) GetSkipRange() []*SkipRange {
	if x != nil {
		return x.SkipRange
	}
	return nil
}

type SnowflakeOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime     int64 `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`             // 开始时间
	LoadNum       int32 `protobuf:"varint,3,opt,name=load_num,json=loadNum,proto3" json:"load_num,omitempty"`                   // 每批生成数量
	LoadThreshold int32 `protobuf:"varint,4,opt,name=load_threshold,json=loadThreshold,proto3" json:"load_threshold,omitempty"` // 加载阀值
	// 模块跳过的id范围
	SkipRange []*SkipRange `protobuf:"bytes,5,rep,name=skip_range,json=skipRange,proto3" json:"skip_range,omitempty"`
}

func (x *SnowflakeOption) Reset() {
	*x = SnowflakeOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mannager_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnowflakeOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnowflakeOption) ProtoMessage() {}

func (x *SnowflakeOption) ProtoReflect() protoreflect.Message {
	mi := &file_mannager_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnowflakeOption.ProtoReflect.Descriptor instead.
func (*SnowflakeOption) Descriptor() ([]byte, []int) {
	return file_mannager_proto_rawDescGZIP(), []int{6}
}

func (x *SnowflakeOption) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *SnowflakeOption) GetLoadNum() int32 {
	if x != nil {
		return x.LoadNum
	}
	return 0
}

func (x *SnowflakeOption) GetLoadThreshold() int32 {
	if x != nil {
		return x.LoadThreshold
	}
	return 0
}

func (x *SnowflakeOption) GetSkipRange() []*SkipRange {
	if x != nil {
		return x.SkipRange
	}
	return nil
}

type SkipRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartId int64 `protobuf:"varint,1,opt,name=start_id,json=startId,proto3" json:"start_id,omitempty"`
	EndId   int64 `protobuf:"varint,2,opt,name=end_id,json=endId,proto3" json:"end_id,omitempty"`
}

func (x *SkipRange) Reset() {
	*x = SkipRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mannager_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkipRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkipRange) ProtoMessage() {}

func (x *SkipRange) ProtoReflect() protoreflect.Message {
	mi := &file_mannager_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkipRange.ProtoReflect.Descriptor instead.
func (*SkipRange) Descriptor() ([]byte, []int) {
	return file_mannager_proto_rawDescGZIP(), []int{7}
}

func (x *SkipRange) GetStartId() int64 {
	if x != nil {
		return x.StartId
	}
	return 0
}

func (x *SkipRange) GetEndId() int64 {
	if x != nil {
		return x.EndId
	}
	return 0
}

var File_mannager_proto protoreflect.FileDescriptor

var file_mannager_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x61, 0x6e, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0a, 0x67, 0x69, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x22, 0x20, 0x0a, 0x0a,
	0x4d, 0x6f, 0x75, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3c,
	0x0a, 0x0c, 0x4d, 0x6f, 0x75, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c,
	0x0a, 0x07, 0x6d, 0x6f, 0x75, 0x64, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x67, 0x69, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x75,
	0x64, 0x6c, 0x65, 0x52, 0x07, 0x6d, 0x6f, 0x75, 0x64, 0x6c, 0x65, 0x73, 0x22, 0xe8, 0x02, 0x0a,
	0x06, 0x4d, 0x6f, 0x75, 0x64, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12,
	0x2b, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x12, 0x2e, 0x67, 0x69, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x44,
	0x4b, 0x69, 0x6e, 0x64, 0x52, 0x06, 0x69, 0x64, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6c, 0x6f, 0x61, 0x64, 0x4e,
	0x75, 0x6d, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6c, 0x6f, 0x61, 0x64,
	0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x34, 0x0a, 0x0a, 0x73, 0x6b, 0x69,
	0x70, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x67, 0x69, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6b, 0x69, 0x70, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x09, 0x73, 0x6b, 0x69, 0x70, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x8a, 0x02, 0x0a, 0x12, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x2b, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x6b, 0x69, 0x6e,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x67, 0x69, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x44, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x06, 0x69, 0x64, 0x4b,
	0x69, 0x6e, 0x64, 0x12, 0x48, 0x0a, 0x10, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x69, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x63, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0f, 0x69, 0x6e,
	0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a,
	0x10, 0x73, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x69, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x69, 0x64, 0x5f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x16, 0x0a, 0x14, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xa4, 0x01, 0x0a,
	0x0f, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x66, 0x69, 0x72, 0x73, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6c,
	0x6f, 0x61, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6c,
	0x6f, 0x61, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x74,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x6c, 0x6f, 0x61, 0x64, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x34, 0x0a,
	0x0a, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x67, 0x69, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x6b, 0x69, 0x70, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x09, 0x73, 0x6b, 0x69, 0x70, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x22, 0xa8, 0x01, 0x0a, 0x0f, 0x53, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6c, 0x6f, 0x61, 0x64, 0x4e, 0x75,
	0x6d, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x6f, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6c, 0x6f, 0x61, 0x64, 0x54,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x34, 0x0a, 0x0a, 0x73, 0x6b, 0x69, 0x70,
	0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67,
	0x69, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6b, 0x69, 0x70, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x09, 0x73, 0x6b, 0x69, 0x70, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x3d,
	0x0a, 0x09, 0x53, 0x6b, 0x69, 0x70, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x2a, 0x2a, 0x0a,
	0x06, 0x49, 0x44, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x6e, 0x63, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x6e, 0x6f, 0x77,
	0x66, 0x6c, 0x61, 0x6b, 0x65, 0x49, 0x44, 0x10, 0x01, 0x32, 0x9c, 0x01, 0x0a, 0x08, 0x4d, 0x61,
	0x6e, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x07, 0x4d, 0x6f, 0x75, 0x64, 0x6c, 0x65,
	0x73, 0x12, 0x16, 0x2e, 0x67, 0x69, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x6f, 0x75, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x67, 0x69, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x75, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x53, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x67, 0x69, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x67, 0x69, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x0f, 0x5a, 0x0d, 0x67, 0x69, 0x64, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_mannager_proto_rawDescOnce sync.Once
	file_mannager_proto_rawDescData = file_mannager_proto_rawDesc
)

func file_mannager_proto_rawDescGZIP() []byte {
	file_mannager_proto_rawDescOnce.Do(func() {
		file_mannager_proto_rawDescData = protoimpl.X.CompressGZIP(file_mannager_proto_rawDescData)
	})
	return file_mannager_proto_rawDescData
}

var file_mannager_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mannager_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_mannager_proto_goTypes = []interface{}{
	(IDKind)(0),                  // 0: gid.api.v1.IDKind
	(*MoudlesReq)(nil),           // 1: gid.api.v1.MoudlesReq
	(*MoudlesReply)(nil),         // 2: gid.api.v1.MoudlesReply
	(*Moudle)(nil),               // 3: gid.api.v1.Moudle
	(*RegisterModulesReq)(nil),   // 4: gid.api.v1.RegisterModulesReq
	(*RegisterModulesReply)(nil), // 5: gid.api.v1.RegisterModulesReply
	(*IncrementOption)(nil),      // 6: gid.api.v1.IncrementOption
	(*SnowflakeOption)(nil),      // 7: gid.api.v1.SnowflakeOption
	(*SkipRange)(nil),            // 8: gid.api.v1.SkipRange
}
var file_mannager_proto_depIdxs = []int32{
	3,  // 0: gid.api.v1.MoudlesReply.moudles:type_name -> gid.api.v1.Moudle
	0,  // 1: gid.api.v1.Moudle.id_kind:type_name -> gid.api.v1.IDKind
	8,  // 2: gid.api.v1.Moudle.skip_range:type_name -> gid.api.v1.SkipRange
	0,  // 3: gid.api.v1.RegisterModulesReq.id_kind:type_name -> gid.api.v1.IDKind
	6,  // 4: gid.api.v1.RegisterModulesReq.increment_option:type_name -> gid.api.v1.IncrementOption
	7,  // 5: gid.api.v1.RegisterModulesReq.snowflake_option:type_name -> gid.api.v1.SnowflakeOption
	8,  // 6: gid.api.v1.IncrementOption.skip_range:type_name -> gid.api.v1.SkipRange
	8,  // 7: gid.api.v1.SnowflakeOption.skip_range:type_name -> gid.api.v1.SkipRange
	1,  // 8: gid.api.v1.Mannager.Moudles:input_type -> gid.api.v1.MoudlesReq
	4,  // 9: gid.api.v1.Mannager.RegisterModules:input_type -> gid.api.v1.RegisterModulesReq
	2,  // 10: gid.api.v1.Mannager.Moudles:output_type -> gid.api.v1.MoudlesReply
	5,  // 11: gid.api.v1.Mannager.RegisterModules:output_type -> gid.api.v1.RegisterModulesReply
	10, // [10:12] is the sub-list for method output_type
	8,  // [8:10] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_mannager_proto_init() }
func file_mannager_proto_init() {
	if File_mannager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mannager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoudlesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mannager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoudlesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mannager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Moudle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mannager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterModulesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mannager_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterModulesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mannager_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncrementOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mannager_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnowflakeOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mannager_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkipRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_mannager_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*RegisterModulesReq_IncrementOption)(nil),
		(*RegisterModulesReq_SnowflakeOption)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mannager_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mannager_proto_goTypes,
		DependencyIndexes: file_mannager_proto_depIdxs,
		EnumInfos:         file_mannager_proto_enumTypes,
		MessageInfos:      file_mannager_proto_msgTypes,
	}.Build()
	File_mannager_proto = out.File
	file_mannager_proto_rawDesc = nil
	file_mannager_proto_goTypes = nil
	file_mannager_proto_depIdxs = nil
}
